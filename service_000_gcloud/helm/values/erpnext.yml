# service:
# using caddy as ingress proxy
# type: LoadBalancer
mariadbHost: "erpnext-mariadb.erpnext.svc.cluster.local"
persistence:
  worker:
    storageClass: "nfs"
  logs:
    size: 1Gi
    storageClass: "nfs"
  # version 2.1.2
  # storageClass: "nfs"
redis:
  extraEnv:
    - name: REDIS_PASSWORD
      value: "super_secret_password"
############################

# # Default values for erpnext.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# nginxImage:
#   repository: frappe/erpnext-nginx
#   tag: v12.18.0
#   pullPolicy: IfNotPresent

# pythonImage:
#   repository: frappe/erpnext-worker
#   tag: v12.18.0
#   pullPolicy: IfNotPresent

# socketIOImage:
#   repository: frappe/frappe-socketio
#   tag: v12.15.0
#   pullPolicy: IfNotPresent

# redis:
#   image:
#     repository: bitnami/redis
#     tag: 5.0.10-debian-10-r105
#     pullPolicy: IfNotPresent
#     extraEnv:
#     - name: ALLOW_EMPTY_PASSWORD
#       value: "yes"

# # Asset Image Env Variables
# frappePyPort: "8000"
# socketIOPort: "9000"

# # upstreamRealIPAddress: "127.0.0.1"
# # upstreamRealIPRecursive: "off"
# # upstreamRealIPHeader: "X-Forwarded-For"

# # Python Image Env Variables
# # mariadbHost: "mariadb.mariadb.svc.cluster.local"

# redisQueueHost: ""
# redisCacheHost: ""
# redisSocketIOHost: ""

# # PostgreSQL related variables
# postgresHost: ""
# postgresPort: ""

# migrateJob:
#   # Set this to true to run migrate as part of helm install/upgrade
#   enable: false
#   backup: true

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true

# podSecurityContext:
#   supplementalGroups: [1000]

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# # Additional Services
# socketIOService:
#   type: ClusterIP
#   port: 9000

# redisSocketIOService:
#   type: ClusterIP
#   port: 11000

# redisQueueService:
#   type: ClusterIP
#   port: 12000

# redisCacheService:
#   type: ClusterIP
#   port: 13000

# persistence:
#   worker:
#     enabled: true
#     # existingClaim: ""
#     size: 8Gi
#     # storageClass: "nfs"
#   logs:
#     enabled: true
#     # existingClaim: ""
#     size: 8Gi
#     # storageClass: "nfs"

# volumePermissions:
#   enabled: no

# resources: {}
#   # If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# nodeSelector: {}

# tolerations: []

# affinity: {}
